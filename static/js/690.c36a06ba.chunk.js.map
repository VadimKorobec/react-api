{"version":3,"file":"static/js/690.c36a06ba.chunk.js","mappings":"wMAEaA,EAAW,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,qBAAsBC,EAAmB,EAAnBA,aAC/CC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAI,WAAYH,IAEtB,+BACE,eAAII,UAAU,kBAAd,UACE,iBAAKA,UAAU,8BAAf,WACE,iBAAKA,UAAU,SAAf,UACGN,IACC,kBACEM,UAAU,wBACVC,KAAK,WACLC,QAAST,EAAKU,UACdC,SAAU,kBAAMV,EAAqBD,EAAKY,GAAhC,IAGbX,GACC,SAAC,KAAD,CAAMY,GAAIb,EAAKY,GAAIE,MAAOX,EAA1B,SACGH,EAAKe,SAGR,wBAAKf,EAAKe,YAGd,gBAAKR,UAAU,MAAf,SACGL,IACC,mBACEM,KAAK,SACLD,UAAU,YACV,aAAW,QACXS,UAAWhB,EAAKU,UAChBO,QAAS,kBAAMf,EAAaF,EAAKY,GAAxB,YAQxB,C,sJCvCYM,EAAb,gMACEJ,MAAQ,CACNd,KAAM,IAFV,EAKEmB,aAAe,SAAAC,GACb,EAAKC,UAAL,UACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,OAE7B,EATH,EAWEC,aAAe,SAAAL,GACbA,EAAEM,iBACF,EAAKC,MAAMC,QAAQ,EAAKd,MAAMd,MAC9B,EAAK6B,OACN,EAfH,EAiBEA,MAAQ,WACN,EAAKR,SAAS,CACZrB,KAAM,IAET,EArBH,uCAuBE,WACE,IAAQA,EAAS8B,KAAKhB,MAAdd,KAER,OACE,+BACE,kBAAM+B,SAAUD,KAAKL,aAArB,WACE,iBAAKlB,UAAU,OAAf,WACE,kBAAOyB,QAAQ,eAAezB,UAAU,aAAxC,0BAGA,kBACEgB,KAAK,OACLf,KAAK,OACLD,UAAU,eACVK,GAAG,eACHD,SAAUmB,KAAKX,aACfK,MAAOxB,QAGX,mBAAQQ,KAAK,SAASD,UAAU,kBAAhC,0BAMP,KAhDH,GAA8B0B,EAAAA,W,oBCFjBC,EAAiB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBAAiBC,EAAiB,EAAjBA,WAKhD,OACE,+BACE,2BACE,iBAAK7B,UAAU,OAAf,WACE,kBAAOyB,QAAQ,eAAezB,UAAU,aAAxC,0BAGA,kBACEC,KAAK,OACLD,UAAU,eACVK,GAAG,eACHD,SAfW,SAAAS,GACnBe,EAAgB,CAAEE,OAAQjB,EAAEE,OAAOE,OACpC,EAcSA,MAAOY,UAMlB,E,8BCbYE,EAAW,WAAO,IAAD,EAEdC,GAAaC,EAAAA,EAAAA,KAAY,SAAA1B,GAAK,OAAIA,EAAMd,IAAV,IAApCA,KACR,GAA4CyC,EAAAA,EAAAA,UAASF,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBV,EAArB,KAEMC,EAAU,UAAGS,EAAaC,IAAI,iBAApB,QAAiC,GAE3CC,GAAWC,EAAAA,EAAAA,OAWjBC,EAAAA,EAAAA,YAAU,WACRV,GACEI,EAAiB,OACfJ,QADe,IACfA,OADe,EACfA,EAAUF,QAAO,SAAArC,GAAI,OACnBA,EAAKe,MAAMmC,cAAcC,SAASf,EAAWgB,OAAOF,cADjC,IAI1B,GAAE,CAACd,EAAYG,IAyBhB,OACE,iCACE,0CACA,SAACL,EAAD,CACEC,gBAAiBA,EACjBC,WAAYA,KAEd,SAAClB,EAAD,CAAUU,QAfE,SAAAJ,GAIduB,GAASM,EAAAA,EAAAA,GAAW7B,IACpB8B,EAAAA,GAAAA,QAAc,sBACf,IAUIZ,IACC,wBACGA,EAAea,KAAI,SAAAvD,GAAI,OACtB,SAACD,EAAA,EAAD,CAEEC,KAAMA,GADDA,EAAKY,GAFU,QAYjC,ECxED,EATiB,WACf,OACE,iCACE,uCACA,SAAC0B,EAAD,MAGL,C","sources":["components/TodoItem/TodoItem.jsx","components/FormToDo/FormToDo.jsx","components/FormToDo/FormFilterTodo.jsx","components/TodoList/TodoList.jsx","components/pages/TodoPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const TodoItem = ({ todo, handleCheckCompleted, handleDelete }) => {\n  const location = useLocation();\n  console.log('location', location);\n  return (\n    <>\n      <li className=\"list-group-item\">\n        <div className=\"row justify-content-between\">\n          <div className=\"col-10\">\n            {handleCheckCompleted && (\n              <input\n                className=\"form-check-input me-2\"\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() => handleCheckCompleted(todo.id)}\n              />\n            )}\n            {handleCheckCompleted ? (\n              <Link to={todo.id} state={location}>\n                {todo.title}\n              </Link>\n            ) : (\n              <h2>{todo.title}</h2>\n            )}\n          </div>\n          <div className=\"col\">\n            {handleDelete && (\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                aria-label=\"Close\"\n                disabled={!todo.completed}\n                onClick={() => handleDelete(todo.id)}\n              ></button>\n            )}\n          </div>\n        </div>\n      </li>\n    </>\n  );\n};\n","import { Component } from 'react';\n\nexport class FormToDo extends Component {\n  state = {\n    todo: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.addToDo(this.state.todo);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      todo: '',\n    });\n  };\n\n  render() {\n    const { todo } = this.state;\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInput\" className=\"form-label\">\n              Create Todo\n            </label>\n            <input\n              name=\"todo\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleInput\"\n              onChange={this.handleChange}\n              value={todo}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Add ToDo\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","export const FormFilterTodo = ({ setSearchParams, filterText }) => {\n  const handleChange = e => {\n    setSearchParams({ filter: e.target.value });\n  };\n\n  return (\n    <>\n      <form>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInput\" className=\"form-label\">\n            Filter Todo\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleInput\"\n            onChange={handleChange}\n            value={filterText}\n          />\n        </div>\n      </form>\n    </>\n  );\n};\n","import { FormToDo } from 'components/FormToDo/FormToDo';\nimport { TodoItem } from 'components/TodoItem/TodoItem';\nimport { useEffect, useState } from 'react';\n// import { nanoid } from 'nanoid';\nimport { toast } from 'react-hot-toast';\nimport { FormFilterTodo } from 'components/FormToDo/FormFilterTodo';\nimport { useSearchParams } from 'react-router-dom';\nimport { createTodo } from 'redux/todo/actions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const TodoList = () => {\n  // const [todoList, setTodoList] = useState('');\n  const { todo: todoList } = useSelector(state => state.todo);\n  const [filterTodoList, setFilterTodoList] = useState(todoList);\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const filterText = searchParams.get('filter') ?? '';\n\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   const localTodo = localStorage.getItem('todo');\n  //   if (localTodo) setTodoList(JSON.parse(localTodo));\n  // }, []);\n\n  // useEffect(() => {\n  //   todoList && localStorage.setItem('todo', JSON.stringify(todoList));\n  // }, [todoList]);\n\n  useEffect(() => {\n    todoList &&\n      setFilterTodoList(\n        todoList?.filter(todo =>\n          todo.title.toLowerCase().includes(filterText.trim().toLowerCase())\n        )\n      );\n  }, [filterText, todoList]);\n\n  // const handleCheckCompleted = id => {\n  //   setTodoList(prevState => {\n  //     return prevState.map(todo =>\n  //       todo.id === id ? { ...todo, completed: !todo.completed } : todo\n  //     );\n  //   });\n  // };\n\n  // const handleDelete = id => {\n  //   setTodoList(prevState => {\n  //     return prevState.filter(todo => todo.id !== id);\n  //   });\n  //   toast.error('Delete succssesfuly');\n  // };\n\n  const addToDo = value => {\n    // setTodoList(prevState => {\n    //   return [...prevState, { id: nanoid(), title: value, completed: false }];\n    // });\n    dispatch(createTodo(value));\n    toast.success('Create successfully');\n  };\n\n  return (\n    <>\n      <h1>My Todo List</h1>\n      <FormFilterTodo\n        setSearchParams={setSearchParams}\n        filterText={filterText}\n      />\n      <FormToDo addToDo={addToDo} />\n      {filterTodoList && (\n        <ul>\n          {filterTodoList.map(todo => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              // handleCheckCompleted={handleCheckCompleted}\n              // handleDelete={handleDelete}\n            />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\n// import { Component } from 'react';\n// // import todo from '../../todo.json';\n// import { TodoItem } from 'components/TodoItem/TodoItem';\n// import { FormToDo } from 'components/FormToDo/FormToDo';\n// import { nanoid } from 'nanoid';\n\n// export class TodoList extends Component {\n//   state = {\n//     todoList: '',\n//     isDelete: false,\n//     isCreate: false,\n//   };\n\n//   componentDidMount() {\n//     if (localStorage.getItem('todo'))\n//       this.setState({ todoList: JSON.parse(localStorage.getItem('todo')) });\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.todoList.length !== this.state.todoList.length) {\n//       console.log('Edit todo list');\n//     }\n//     if (prevState.todoList.length > this.state.todoList.length) {\n//       localStorage.setItem('todo', JSON.stringify(this.state.todoList));\n//       this.setState({ isDelete: true });\n//       setTimeout(() => {\n//         this.setState({ isDelete: false });\n//       }, 1500);\n//     }\n//     if (prevState.todoList.length < this.state.todoList.length) {\n//       localStorage.setItem('todo', JSON.stringify(this.state.todoList));\n//       this.setState({ isCreate: true });\n//       setTimeout(() => {\n//         this.setState({ isCreate: false });\n//       }, 1500);\n//     }\n//   }\n\n//   handleCheckCompleted = id => {\n//     this.setState(prevState => ({\n//       todoList: prevState.todoList.map(todo =>\n//         todo.id === id ? { ...todo, completed: !todo.completed } : todo\n//       ),\n//     }));\n//   };\n\n//   handleDelete = id => {\n//     this.setState(prevState => ({\n//       todoList: prevState.todoList.filter(todo => todo.id !== id),\n//     }));\n//   };\n\n//   addToDo = value => {\n//     this.setState(prevState => ({\n//       todoList: [\n//         ...prevState.todoList,\n//         { id: nanoid(), title: value, completed: false },\n//       ],\n//     }));\n//   };\n\n//   render() {\n//     const { isDelete, isCreate } = this.state;\n\n//     return (\n//       <>\n//         <h1>My Todo List</h1>\n//         {isDelete && (\n//           <div className=\"alert alert-danger\" role=\"alert\">\n//             ToDo delete successfully!\n//           </div>\n//         )}\n//         {isCreate && (\n//           <div className=\"alert alert-success\" role=\"alert\">\n//             Create ToDo successfully!\n//           </div>\n//         )}\n//         <FormToDo addToDo={this.addToDo} />\n//         {this.state.todoList && (\n//           <ul>\n//             {this.state.todoList.map(todo => (\n//               <TodoItem\n//                 key={todo.id}\n//                 todo={todo}\n//                 handleCheckCompleted={this.handleCheckCompleted}\n//                 handleDelete={this.handleDelete}\n//               />\n//             ))}\n//           </ul>\n//         )}\n//       </>\n//     );\n//   }\n// }\n","import { TodoList } from 'components/TodoList/TodoList';\n\nconst TodoPage = () => {\n  return (\n    <>\n      <h1>Todo Page</h1>\n      <TodoList />\n    </>\n  );\n};\n\nexport default TodoPage;\n"],"names":["TodoItem","todo","handleCheckCompleted","handleDelete","location","useLocation","console","log","className","type","checked","completed","onChange","id","to","state","title","disabled","onClick","FormToDo","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","props","addToDo","reset","this","onSubmit","htmlFor","Component","FormFilterTodo","setSearchParams","filterText","filter","TodoList","todoList","useSelector","useState","filterTodoList","setFilterTodoList","useSearchParams","searchParams","get","dispatch","useDispatch","useEffect","toLowerCase","includes","trim","createTodo","toast","map"],"sourceRoot":""}
{"version":3,"file":"static/js/971.998d0f31.chunk.js","mappings":"2MAAaA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACE,+BACE,gBAAKC,UAAU,OAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,oBACA,cAAGA,UAAU,YAAb,SAA0BD,UAKnC,E,8BCHKE,EAEK,UAFLA,EAGM,WAHNA,EAIO,YAGAC,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC5B,GAAgCC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAzCA,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,MAChBC,GAAWC,EAAAA,EAAAA,MAsCjB,OApCAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACV,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACHR,GACLM,GAASI,EAAAA,EAAAA,GAAmBV,GAC7B,GAAE,CAACM,EAAUN,IA6BVI,IAAWN,GAEX,gBAAKD,UAAU,iBAAiBc,KAAK,SAArC,UACE,iBAAMd,UAAU,kBAAhB,0BAGKO,IAAWN,GAElB,wBACGK,EAAKS,KAAI,SAAAC,GAAI,OACZ,2BACE,uBAAIA,EAAKC,SACT,uBAAID,EAAKE,UACT,uBAAIF,EAAKG,gBAHFH,EAAKI,IADF,MASTb,IAAWN,GACb,SAACH,EAAD,UAAYU,SADd,CAGR,E,uCC1EYa,EAAb,gMACEhB,MAAQ,CACNiB,MAAO,IAFX,EAKEC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,OAAOJ,OACjC,EAPH,EAaEK,aAAe,SAAAH,GACbA,EAAEI,iBACFC,QAAQC,IAAI,EAAKzB,OACjB,EAAK0B,MAAMC,aAAa,EAAK3B,MAAMiB,OACnC,EAAKW,OACN,EAlBH,EAoBEA,MAAQ,WACN,EAAKR,SAAS,CACZH,MAAO,IAEV,EAxBH,uCA0BE,WACE,IAAQA,EAAUY,KAAK7B,MAAfiB,MAER,OACE,+BACE,kBACEtB,UAAU,cACVc,KAAK,SACLqB,SAAUD,KAAKP,aAHjB,WAKE,kBACE3B,UAAU,oBACVoC,KAAK,SACLC,YAAY,SACZ,aAAW,SACXC,SAAUJ,KAAKX,aACfD,MAAOA,KAET,mBAAQtB,UAAU,0BAA0BoC,KAAK,SAAjD,wBAMP,KAlDH,GAA4BG,EAAAA,WCkB5B,EAhBiB,WACf,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOrC,EAAP,KAAmBsC,EAAnB,KAMA,OACE,iCACE,uCACA,SAACpB,EAAD,CAAQW,aAPS,SAAA7B,GACnBsC,EAActC,EACf,KAMG,SAACD,EAAD,CAAaC,WAAYA,MAG9B,C","sources":["components/ErrorCard/ErrorCard.jsx","components/ContentInfo/ContentInfo.jsx","components/Search/Search.jsx","components/pages/NewsPage.jsx"],"sourcesContent":["export const ErrorCard = ({ children }) => {\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Error</h5>\n          <p className=\"card-text\">{children}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { ErrorCard } from 'components/ErrorCard/ErrorCard';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getNewsSearchThunk, getNewsThunk } from 'redux/news/thunk';\n// import { useEffect, useState } from 'react';\n// import { getNews } from 'services/getNews';\n// import { useCustomContext } from 'testContext/Context/Context';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  FULFILLED: 'fulfilled',\n};\n\nexport const ContentInfo = ({ searchText }) => {\n  const { news, status, error } = useSelector(state => state.news);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getNewsThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!searchText) return;\n    dispatch(getNewsSearchThunk(searchText));\n  }, [dispatch, searchText]);\n\n  // const { news, setNews } = useCustomContext();\n  // const [error, setError] = useState('');\n  // const [status, setStatus] = useState(STATUS.IDLE);\n\n  // useEffect(() => {\n  //   news && setStatus(STATUS.RESOLVED);\n  // }, [news]);\n\n  // useEffect(() => {\n  //   if (!searchText) return;\n  //   setStatus(STATUS.PENDING);\n  //   getNews(searchText)\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       if (data.status === 'ok') {\n  //         setNews(data.articles);\n  //         setStatus(STATUS.RESOLVED);\n  //       } else {\n  //         return Promise.reject(data.message);\n  //       }\n  //     })\n  //     .catch(error => {\n  //       setError(error);\n  //       setStatus(STATUS.REJECTED);\n  //     });\n  // }, [searchText, setNews]);\n\n  if (status === STATUS.PENDING) {\n    return (\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    );\n  } else if (status === STATUS.FULFILLED) {\n    return (\n      <ul>\n        {news.map(item => (\n          <li key={item.url}>\n            <p>{item.title}</p>\n            <p>{item.author}</p>\n            <p>{item.description}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  } else if (status === STATUS.REJECTED) {\n    return <ErrorCard>{error}</ErrorCard>;\n  }\n};\n\n// export class ContentInfo extends Component {\n//   state = {\n//     news: null,\n//     // isLoading: false,\n//     error: '',\n//     status: 'idle',\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevProps.searchText !== this.props.searchText) {\n//       this.setState({ status: 'pending' });\n//       getNews(this.props.searchText)\n//         .then(response => response.json())\n//         .then(data => {\n//           if (data.status === 'ok') {\n//             this.setState({ news: data.articles, status: 'resolved' });\n//           } else {\n//             return Promise.reject(data.message);\n//           }\n//         })\n//         .catch(error => {\n//           this.setState({ error, status: 'rejected' });\n//         });\n//       // .finally(() => {\n//       //   this.setState({ isLoading: false });\n//       // });\n//     }\n//   }\n\n//   render() {\n//     const { news, error } = this.state;\n//     if (this.state.status === 'pending') {\n//       return (\n//         <div className=\"spinner-border\" role=\"status\">\n//           <span className=\"visually-hidden\">Loading...</span>\n//         </div>\n//       );\n//     } else if (this.state.status === 'resolved') {\n//       return (\n//         <ul>\n//           {news.map(item => (\n//             <li key={item.url}>\n//               <p>{item.title}</p>\n//               <p>{item.author}</p>\n//               <p>{item.description}</p>\n//             </li>\n//           ))}\n//         </ul>\n//       );\n//     } else if (this.state.status === 'rejected') {\n//       return <ErrorCard>{error}</ErrorCard>;\n//     }\n// return (\n//   <>\n//     {/* {error && <ErrorCard>{error}</ErrorCard>} */}\n//     {/* {isLoading && (\n//       <div className=\"spinner-border\" role=\"status\">\n//         <span className=\"visually-hidden\">Loading...</span>\n//       </div>\n//     )} */}\n//     {/* <ul>\n//       {news &&\n//         news.map(item => (\n//           <li key={item.url}>\n//             <p>{item.title}</p>\n//             <p>{item.author}</p>\n//             <p>{item.description}</p>\n//           </li>\n//         ))}\n//     </ul> */}\n//   </>\n// );\n","import { Component } from 'react';\n\nexport class Search extends Component {\n  state = {\n    value: '',\n  };\n\n  handleChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  // handleChange = ({ target: { value } }) => {\n  //   this.setState({ value });\n  // };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.handleSearch(this.state.value);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      value: '',\n    });\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <>\n        <form\n          className=\"d-flex mt-2\"\n          role=\"search\"\n          onSubmit={this.handleSubmit}\n        >\n          <input\n            className=\"form-control me-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={this.handleChange}\n            value={value}\n          />\n          <button className=\"btn btn-outline-success\" type=\"submit\">\n            Search\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import { ContentInfo } from 'components/ContentInfo/ContentInfo';\nimport { Search } from 'components/Search/Search';\nimport { useState } from 'react';\n\nconst NewsPage = () => {\n  const [searchText, setSearchText] = useState('');\n\n  const handleSearch = searchText => {\n    setSearchText(searchText);\n  };\n\n  return (\n    <>\n      <h1>News Page</h1>\n      <Search handleSearch={handleSearch} />\n      <ContentInfo searchText={searchText} />\n    </>\n  );\n};\n\nexport default NewsPage;\n"],"names":["ErrorCard","children","className","STATUS","ContentInfo","searchText","useSelector","state","news","status","error","dispatch","useDispatch","useEffect","getNewsThunk","getNewsSearchThunk","role","map","item","title","author","description","url","Search","value","handleChange","e","setState","target","handleSubmit","preventDefault","console","log","props","handleSearch","reset","this","onSubmit","type","placeholder","onChange","Component","useState","setSearchText"],"sourceRoot":""}